@page "/"
@using System.Drawing

@inject ILogger<Index> Logger

<div class="container">
    <div class="container__inner">
        <div class="form">
            <p class="form-title">X:</p><p></p>
            <p class="input-title">Количество клеток по X:</p> <input type="number" class="input" @bind=xAxis.CellCount />
            <p class="input-title">Начало по X: </p><input type="number" class="input" @bind=xAxis.Begin />
            <p class="input-title">Конец по X: </p><input type="number" class="input" @bind=xAxis.End />
        </div>

        <div class="form">
            <p class="form-title">Z:</p><p></p>
            <p class="input-title">Количество клеток по Z:</p> <input type="number" class="input" @bind=zAxis.CellCount />
            <p class="input-title">Начало по Z: </p><input type="number" class="input" @bind=zAxis.Begin />
            <p class="input-title">Конец по Z: </p><input type="number" class="input" @bind=zAxis.End />
        </div>
        <div class="form">
            <p class="form-title">Регуляризация</p><p></p>
            <p class="input-title">Альфа: </p> <input class="input" value=@(regularization.Alpha) @onchange=@((ChangeEventArgs args) => OnInputChange(args, "alpha")) />
            <p class="input-title">Гамма: </p><input class="input" value=@(regularization.Gamma) @onchange=@((ChangeEventArgs args) => OnInputChange(args, "gamma")) />
        </div>
    </div>

    @* <div class="table-row">
        @for (int i = 1; i < xAxis.CellCount + 2; i++)
        {
        <div class="table-row__number">@i</div>
        }
        </div>*@

    <div class="buttons-line">
        <button class="button" @onclick=OnBuildGrid>Построить сетку</button>
        <button class="button" @onclick=OnResetGrid>Сбросить сетку</button>
        <button class="button" @onclick=@(async () => await OnCalculate())>Посчитать задачу</button>
    </div>

    @if (currentGrid != null)
    {
        <div class="buttons-line buttons-line--icons">
            <button class="button" @onclick=OnBack>@('<')</button>
            <button class="button" @onclick=OnForward>@('>')</button>
        </div>

        <div class="numbers numbers-row">
            @for (int i = 0; i < xAxis.CellCount + 1; i++)
            {
                int label = xAxis.GetLabel(i);
                <div class="number">@(String.Format("{0,4:D}", label))</div>
            }
        </div>

        <div class="table-line">
            <div class="numbers numbers-column">
                @for (int i = zAxis.CellCount - 1; i >= 0; i--)
                {
                    int label = zAxis.GetLabel(i);
                    <div class="number">@(String.Format("{0,4:D}", label))</div>
                }
            </div>
            <div class="table" style=@($"grid-template-columns: repeat({xAxis.CellCount}, 1fr);")>

                @for (int i = 0; i < currentGrid.Properties.Length; i++)
                {
                    var index = i;
                    Color color = colorScale.GetColor(currentGrid.Properties[index]);
                    <input class="input input--table" value=@($"{currentGrid.Properties[index]:G4}") @onchange=@((ChangeEventArgs args) => OnGridCellChange(args, index)) style=@($"background: rgba({color.R}, {color.G}, {color.B}, 0.5);")>
                }
            </div>
        </div>
    }


    <RadzenTabs TabPosition="Radzen.TabPosition.Top">
        <Tabs>
            <RadzenTabsItem Text="Настоящая G">
                <RadzenChart>
                    <RadzenLineSeries Smooth="false" Data="@realG" CategoryProperty="X" Title="Настоящая G" LineType="LineType.Solid" ValueProperty="G">
                        <RadzenMarkers MarkerType="MarkerType.None" />
                        <RadzenLegend Visible="false" />
                        <RadzenValueAxis FormatString="{0:G4}" />
                    </RadzenLineSeries>
                </RadzenChart>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Посчитанная G">

                <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@solutionG" CategoryProperty="X" Title="Посчитанная G" LineType="LineType.Solid" ValueProperty="G">
                        <RadzenMarkers MarkerType="MarkerType.None" />
                        <RadzenLegend Visible="false" />
                        <RadzenValueAxis FormatString="{0:G4}" />
                    </RadzenLineSeries>
                </RadzenChart>
            </RadzenTabsItem>

            <RadzenTabsItem Text="Разница">

                <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@diffG" CategoryProperty="X" Title="Разница" LineType="LineType.Solid" ValueProperty="G">
                        <RadzenMarkers MarkerType="MarkerType.None" />
                        <RadzenLegend Visible="false" />
                        <RadzenValueAxis FormatString="{0:G4}" />
                    </RadzenLineSeries>
                </RadzenChart>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>


    <div class="container__inner">
        <div class="form">
            <p class="form-title">Функционал</p><p></p>
            <p class="input-title">F: </p> <input type="number" class="input" readonly @bind=F />
        </div>
    </div>
</div>